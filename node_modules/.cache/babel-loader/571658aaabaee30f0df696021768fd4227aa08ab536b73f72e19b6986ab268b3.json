{"ast":null,"code":"var _jsxFileName = \"/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/auth/useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { getSessionCookie, setSessionCookie, dropCookie } from \"./sessions\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authed, setAuthed] = useState(false);\n  // Store new value to indicate the call has not finished. Default to true\n  const [loading, setLoading] = useState(true);\n\n  // Runs once when the component first mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5000/@me\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token\n      }\n    }).then(response => {\n      if (response.status == 200) {\n        return true;\n      } else return false;\n    }).then(activeUser => {\n      if (activeUser) {\n        setAuthed(true);\n        setLoading(false);\n        return true;\n      } else {\n        setAuthed(false);\n        setLoading(false);\n        return false;\n      }\n    });\n  }, []);\n  const login = async (email, password) => {\n    try {\n      fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          password: password,\n          email: email\n        })\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        if (data.error) {\n          console.log(data.error);\n          console.log(\"then2\");\n          return Promise.reject(data.error);\n        } else {\n          console.log(\"logged in\");\n          setSessionCookie(JSON.stringify(data));\n          setAuthed(true);\n          return Promise.resolve();\n        }\n      }).catch(err => {\n        console.log(err);\n        console.log(\"end of catch1\");\n        return Promise.reject(err);\n      });\n    } catch (error) {\n      console.log(error);\n      if (error.status === 401) {\n        alert(\"Invalid credentials\");\n      }\n    }\n  };\n  const logout = () => {\n    dropCookie();\n    console.log(\"The User has logged out\");\n    setAuthed(false);\n  };\n  return (\n    /*#__PURE__*/\n    // Using the provider so that ANY component in our application can\n    // use the values that we are sending.\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        authed,\n        setAuthed,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Finally creating the custom hook\n_s(AuthProvider, \"HuesLFcUfohR0V6QuaSQ08eev30=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","useEffect","getSessionCookie","setSessionCookie","dropCookie","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authed","setAuthed","loading","setLoading","fetch","method","headers","token","then","response","status","activeUser","login","email","password","body","JSON","stringify","json","data","error","console","log","Promise","reject","resolve","catch","err","alert","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/auth/useAuth.js"],"sourcesContent":["// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { getSessionCookie, setSessionCookie, dropCookie } from \"./sessions\";\n\n// Create the context\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [authed, setAuthed] = useState(false);\n  // Store new value to indicate the call has not finished. Default to true\n  const [loading, setLoading] = useState(true);\n\n  // Runs once when the component first mounts\n  useEffect(() => {\n    fetch(\"http://localhost:5000/@me\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n      },\n    })\n      .then((response) => {\n        if (response.status == 200) {\n          return true;\n        } else return false;\n      })\n      .then((activeUser) => {\n        if (activeUser) {\n          setAuthed(true);\n          setLoading(false);\n          return true;\n        } else {\n          setAuthed(false);\n          setLoading(false);\n          return false;\n        }\n      });\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          password: password,\n          email: email,\n        }),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          if (data.error) {\n            console.log(data.error);\n            console.log(\"then2\");\n            return Promise.reject(data.error);\n          } else {\n            console.log(\"logged in\");\n            setSessionCookie(JSON.stringify(data));\n            setAuthed(true);\n            return Promise.resolve();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(\"end of catch1\");\n          return Promise.reject(err);\n        });\n    } catch (error) {\n      console.log(error);\n      if (error.status === 401) {\n        alert(\"Invalid credentials\");\n      }\n    }\n  };\n\n  const logout = () => {\n    dropCookie();\n    console.log(\"The User has logged out\");\n    setAuthed(false);\n  };\n\n  return (\n    // Using the provider so that ANY component in our application can\n    // use the values that we are sending.\n    <AuthContext.Provider value={{ authed, setAuthed, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Finally creating the custom hook\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// /src/hooks/useAuth.tsx\nimport React,{useState,createContext,useContext,useEffect}from\"react\";import{getSessionCookie,setSessionCookie,dropCookie}from\"./sessions\";import domainName from\"../../domain\";// Create the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);const domain=domainName;export const AuthProvider=_ref=>{let{children}=_ref;const[authed,setAuthed]=useState(false);// Store new value to indicate the call has not finished. Default to true\n// Runs once when the component first mounts\nuseEffect(()=>{fetch(\"\".concat(domain,\"/@me\"),{method:\"GET\",headers:{\"x-access-token\":getSessionCookie().token,\"ngrok-skip-browser-warning\":\"skip\"}}).then(response=>{if(response.status===200){return true;}else return false;}).then(activeUser=>{if(activeUser){setAuthed(true);return true;}else{setAuthed(false);return false;}});},[]);const login=async(email,password)=>{return fetch(\"\".concat(domain,\"/login\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(response=>{return response.json();}).then(data=>{if(data.error){console.log(data.error);throw new Error(\"error - \".concat(data.error));}else{console.log(\"logged in\");setSessionCookie(JSON.stringify(data));setAuthed(true);return Promise.resolve();}}).catch(err=>{console.log(err);return Promise.reject(err);});};const logout=()=>{dropCookie();console.log(\"The User has logged out\");setAuthed(false);};return/*#__PURE__*/ (// Using the provider so that ANY component in our application can\n// use the values that we are sending.\n_jsx(AuthContext.Provider,{value:{authed,setAuthed,login,logout},children:children}));};// Finally creating the custom hook\nexport const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","useState","createContext","useContext","useEffect","getSessionCookie","setSessionCookie","dropCookie","domainName","jsx","_jsx","AuthContext","domain","AuthProvider","_ref","children","authed","setAuthed","fetch","concat","method","headers","token","then","response","status","activeUser","login","email","password","body","JSON","stringify","json","data","error","console","log","Error","Promise","resolve","catch","err","reject","logout","Provider","value","useAuth"],"sources":["/Users/davediemert/Repos/phlinger-frontend/src/Components/auth/useAuth.js"],"sourcesContent":["// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { getSessionCookie, setSessionCookie, dropCookie } from \"./sessions\";\nimport domainName from \"../../domain\";\n\n// Create the context\nconst AuthContext = createContext(null);\nconst domain = domainName;\nexport const AuthProvider = ({ children }) => {\n  const [authed, setAuthed] = useState(false);\n  // Store new value to indicate the call has not finished. Default to true\n\n  // Runs once when the component first mounts\n  useEffect(() => {\n    fetch(`${domain}/@me`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return true;\n        } else return false;\n      })\n      .then((activeUser) => {\n        if (activeUser) {\n          setAuthed(true);\n          return true;\n        } else {\n          setAuthed(false);\n          return false;\n        }\n      });\n  }, []);\n\n  const login = async (email, password) => {\n    return fetch(`${domain}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.error) {\n          console.log(data.error);\n          throw new Error(`error - ${data.error}`);\n        } else {\n          console.log(\"logged in\");\n          setSessionCookie(JSON.stringify(data));\n          setAuthed(true);\n          return Promise.resolve();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return Promise.reject(err);\n      });\n  };\n\n  const logout = () => {\n    dropCookie();\n    console.log(\"The User has logged out\");\n    setAuthed(false);\n  };\n\n  return (\n    // Using the provider so that ANY component in our application can\n    // use the values that we are sending.\n    <AuthContext.Provider value={{ authed, setAuthed, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Finally creating the custom hook\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
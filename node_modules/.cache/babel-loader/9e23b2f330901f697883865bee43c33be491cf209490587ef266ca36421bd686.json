{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useNavigate,Link}from\"react-router-dom\";import InnerNav from\"../NavBar/InnerNav\";import{getSessionCookie}from\"../auth/sessions\";import domainName from\"../../domain\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TwilioCreds(){const[AccountSID,setAccountSID]=useState(\"\");const[AuthToken,setAuthToken]=useState(\"\");const[errormsg,setErrormsg]=useState(\"\");const[currentSID,setCurrentSID]=useState(\"\");const navigate=useNavigate();const domain=domainName;useEffect(()=>{fetch(\"\".concat(domain,\"/updateCreds\"),{method:\"GET\",headers:{\"x-access-token\":getSessionCookie().token,\"ngrok-skip-browser-warning\":\"skip\"}}).then(response=>{if(response.status===200){return response.json();}else throw new Error(\"error\");}).then(data=>{setCurrentSID(data.sid);});},[]);const updateCreds=async(sid,auth)=>{return fetch(\"\".concat(domain,\"/updateCreds\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"x-access-token\":getSessionCookie().token,\"ngrok-skip-browser-warning\":\"skip\"},body:JSON.stringify({sid:sid,auth:auth})}).then(response=>{return response.json();}).then(data=>{if(data.error){console.log(data.error);throw new Error(\"error - \".concat(data.error));}else{console.log(\"creds updated\");return Promise.resolve();}}).catch(err=>{console.log(err);return Promise.reject(err);});};return/*#__PURE__*/_jsxs(\"div\",{id:\"TwilioCreds\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Update Your Twilio Credentials\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tableDiv\",children:/*#__PURE__*/_jsxs(\"table\",{id:\"demTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Current Twilio SID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Current Twilio Auth Token\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:currentSID}),/*#__PURE__*/_jsx(\"td\",{children:\"*******************\"})]})})]})}),/*#__PURE__*/_jsx(InnerNav,{}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Twilio Account SID: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:AccountSID,onChange:e=>setAccountSID(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"AuthToken: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:AuthToken,onChange:e=>setAuthToken(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{updateCreds(AccountSID,AuthToken).then(()=>navigate(\"/Console\")).catch(err=>setErrormsg(err.message));},children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"p\",{children:errormsg})]});}export default TwilioCreds;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","InnerNav","getSessionCookie","domainName","jsx","_jsx","jsxs","_jsxs","TwilioCreds","AccountSID","setAccountSID","AuthToken","setAuthToken","errormsg","setErrormsg","currentSID","setCurrentSID","navigate","domain","fetch","concat","method","headers","token","then","response","status","json","Error","data","sid","updateCreds","auth","body","JSON","stringify","error","console","log","Promise","resolve","catch","err","reject","id","children","className","type","value","onChange","e","target","onClick","message"],"sources":["/Users/davediemert/Repos/phlinger-frontend/src/Components/TwilioCreds/TwilioCreds.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\nimport domainName from \"../../domain\";\n\nfunction TwilioCreds() {\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const [currentSID, setCurrentSID] = useState(\"\");\n  const navigate = useNavigate();\n  const domain = domainName;\n  useEffect(() => {\n    fetch(`${domain}/updateCreds`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        } else throw new Error(\"error\");\n      })\n      .then((data) => {\n        setCurrentSID(data.sid);\n      });\n  }, []);\n\n  const updateCreds = async (sid, auth) => {\n    return fetch(`${domain}/updateCreds`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\",\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.error) {\n          console.log(data.error);\n          throw new Error(`error - ${data.error}`);\n        } else {\n          console.log(\"creds updated\");\n          return Promise.resolve();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return Promise.reject(err);\n      });\n  };\n\n  return (\n    <div id=\"TwilioCreds\">\n      <h1>Update Your Twilio Credentials</h1>\n\n      <div className=\"tableDiv\">\n        <table id=\"demTable\">\n          <thead>\n            <tr>\n              <th>Current Twilio SID</th>\n              <th>Current Twilio Auth Token</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{currentSID}</td>\n              <td>*******************</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <InnerNav />\n      <form>\n        <div>\n          <label>Twilio Account SID: </label>\n          <input\n            type=\"text\"\n            value={AccountSID}\n            onChange={(e) => setAccountSID(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>AuthToken: </label>\n          <input\n            type=\"password\"\n            value={AuthToken}\n            onChange={(e) => setAuthToken(e.target.value)}\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            updateCreds(AccountSID, AuthToken)\n              .then(() => navigate(\"/Console\"))\n              .catch((err) => setErrormsg(err.message));\n          }}\n        >\n          Submit\n        </button>\n      </form>\n      <p>{errormsg}</p>\n    </div>\n  );\n}\n\nexport default TwilioCreds;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/TwilioCreds/TwilioCreds.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TwilioCreds() {\n  _s();\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"http://localhost:5000/updateCreds\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return true;\n      } else return false;\n    }).then(activeUser => {\n      if (activeUser) {\n        setAuthed(true);\n        return true;\n      } else {\n        setAuthed(false);\n        return false;\n      }\n    });\n  }, []);\n  const updateCreds = async (sid, auth) => {\n    return fetch(\"http://localhost:5000/updateCreds\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        throw new Error(`error - ${data.error}`);\n      } else {\n        console.log(\"creds updated\");\n        return Promise.resolve();\n      }\n    }).catch(err => {\n      console.log(err);\n      return Promise.reject(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"TwilioCreds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Your Twilio Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InnerNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Twilio Account SID: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: AccountSID,\n          onChange: e => setAccountSID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"AuthToken: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: AuthToken,\n          onChange: e => setAuthToken(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          updateCreds(AccountSID, AuthToken).then(() => navigate(\"/Console\")).catch(err => setErrormsg(err.message));\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errormsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(TwilioCreds, \"IbzKmjiCMSKbcSmqa5NpJ8748Nc=\", false, function () {\n  return [useNavigate];\n});\n_c = TwilioCreds;\nexport default TwilioCreds;\nvar _c;\n$RefreshReg$(_c, \"TwilioCreds\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","InnerNav","getSessionCookie","jsxDEV","_jsxDEV","TwilioCreds","_s","AccountSID","setAccountSID","AuthToken","setAuthToken","errormsg","setErrormsg","navigate","fetch","method","headers","token","then","response","status","activeUser","setAuthed","updateCreds","sid","auth","body","JSON","stringify","json","data","error","console","log","Error","Promise","resolve","catch","err","reject","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","message","_c","$RefreshReg$"],"sources":["/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/TwilioCreds/TwilioCreds.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\n\nfunction TwilioCreds() {\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/updateCreds\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return true;\n        } else return false;\n      })\n      .then((activeUser) => {\n        if (activeUser) {\n          setAuthed(true);\n          return true;\n        } else {\n          setAuthed(false);\n          return false;\n        }\n      });\n  }, []);\n\n  const updateCreds = async (sid, auth) => {\n    return fetch(\"http://localhost:5000/updateCreds\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token,\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.error) {\n          console.log(data.error);\n          throw new Error(`error - ${data.error}`);\n        } else {\n          console.log(\"creds updated\");\n          return Promise.resolve();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return Promise.reject(err);\n      });\n  };\n\n  return (\n    <div id=\"TwilioCreds\">\n      <h1>Update Your Twilio Credentials</h1>\n\n      <InnerNav />\n      <form>\n        <div>\n          <label>Twilio Account SID: </label>\n          <input\n            type=\"text\"\n            value={AccountSID}\n            onChange={(e) => setAccountSID(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>AuthToken: </label>\n          <input\n            type=\"password\"\n            value={AuthToken}\n            onChange={(e) => setAuthToken(e.target.value)}\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            updateCreds(AccountSID, AuthToken)\n              .then(() => navigate(\"/Console\"))\n              .catch((err) => setErrormsg(err.message));\n          }}\n        >\n          Submit\n        </button>\n      </form>\n      <p>{errormsg}</p>\n    </div>\n  );\n}\n\nexport default TwilioCreds;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/TwilioCreds/TwilioCreds.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TwilioCreds() {\n  _s();\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const navigate = useNavigate();\n  const updateCreds = async (sid, auth) => {\n    return fetch(\"http://localhost:5000/updateCreds\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        throw new Error(`error - ${data.error}`);\n      } else {\n        console.log(\"creds updated\");\n        return Promise.resolve();\n      }\n    }).catch(err => {\n      console.log(err);\n      return Promise.reject(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"TwilioCreds\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Your Twilio Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InnerNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Twilio Account SID: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: AccountSID,\n          onChange: e => setAccountSID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"AuthToken: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: AuthToken,\n          onChange: e => setAuthToken(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          updateCreds(AccountSID, AuthToken).then(() => navigate(\"/Console\")).catch(err => setErrormsg(err.message));\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errormsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(TwilioCreds, \"ibUY0RyxObm8FtSnTENTPHFxHB4=\", false, function () {\n  return [useNavigate];\n});\n_c = TwilioCreds;\nexport default TwilioCreds;\nvar _c;\n$RefreshReg$(_c, \"TwilioCreds\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","InnerNav","getSessionCookie","jsxDEV","_jsxDEV","TwilioCreds","_s","AccountSID","setAccountSID","AuthToken","setAuthToken","errormsg","setErrormsg","navigate","updateCreds","sid","auth","fetch","method","headers","token","body","JSON","stringify","then","response","json","data","error","console","log","Error","Promise","resolve","catch","err","reject","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","message","_c","$RefreshReg$"],"sources":["/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/TwilioCreds/TwilioCreds.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\n\nfunction TwilioCreds() {\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const navigate = useNavigate();\n\n  const updateCreds = async (sid, auth) => {\n    return fetch(\"http://localhost:5000/updateCreds\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token,\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.error) {\n          console.log(data.error);\n          throw new Error(`error - ${data.error}`);\n        } else {\n          console.log(\"creds updated\");\n          return Promise.resolve();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return Promise.reject(err);\n      });\n  };\n\n  return (\n    <div id=\"TwilioCreds\">\n      <h1>Update Your Twilio Credentials</h1>\n\n      <InnerNav />\n      <form>\n        <div>\n          <label>Twilio Account SID: </label>\n          <input\n            type=\"text\"\n            value={AccountSID}\n            onChange={(e) => setAccountSID(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>AuthToken: </label>\n          <input\n            type=\"password\"\n            value={AuthToken}\n            onChange={(e) => setAuthToken(e.target.value)}\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            updateCreds(AccountSID, AuthToken)\n              .then(() => navigate(\"/Console\"))\n              .catch((err) => setErrormsg(err.message));\n          }}\n        >\n          Submit\n        </button>\n      </form>\n      <p>{errormsg}</p>\n    </div>\n  );\n}\n\nexport default TwilioCreds;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
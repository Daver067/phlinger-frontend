{"ast":null,"code":"var _jsxFileName = \"/Users/davediemert/Repos/phlinger-frontend/src/Components/TwilioCreds/TwilioCreds.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\nimport domainName from \"../../domain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TwilioCreds() {\n  _s();\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const [currentSID, setCurrentSID] = useState(\"\");\n  const navigate = useNavigate();\n  const domain = domainName;\n  useEffect(() => {\n    fetch(`${domain}/updateCreds`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\"\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else throw new Error(\"error\");\n    }).then(data => {\n      setCurrentSID(data.sid);\n    });\n  }, []);\n  const updateCreds = async (sid, auth) => {\n    return fetch(`${domain}/updateCreds`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\"\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        throw new Error(`error - ${data.error}`);\n      } else {\n        console.log(\"creds updated\");\n        return Promise.resolve();\n      }\n    }).catch(err => {\n      console.log(err);\n      return Promise.reject(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(InnerNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"TwilioCreds\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Your Twilio Credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"demTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Twilio SID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Twilio Auth Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentSID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"*******************\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Twilio Account SID: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: AccountSID,\n            onChange: e => setAccountSID(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"AuthToken: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: AuthToken,\n            onChange: e => setAuthToken(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            updateCreds(AccountSID, AuthToken).then(() => navigate(\"/Console\")).catch(err => setErrormsg(err.message));\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errormsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(TwilioCreds, \"nJahg6O8iq8FYD/YUgqYsLUUa8c=\", false, function () {\n  return [useNavigate];\n});\n_c = TwilioCreds;\nexport default TwilioCreds;\nvar _c;\n$RefreshReg$(_c, \"TwilioCreds\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","InnerNav","getSessionCookie","domainName","jsxDEV","_jsxDEV","TwilioCreds","_s","AccountSID","setAccountSID","AuthToken","setAuthToken","errormsg","setErrormsg","currentSID","setCurrentSID","navigate","domain","fetch","method","headers","token","then","response","status","json","Error","data","sid","updateCreds","auth","body","JSON","stringify","error","console","log","Promise","resolve","catch","err","reject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","onClick","message","_c","$RefreshReg$"],"sources":["/Users/davediemert/Repos/phlinger-frontend/src/Components/TwilioCreds/TwilioCreds.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport InnerNav from \"../NavBar/InnerNav\";\nimport { getSessionCookie } from \"../auth/sessions\";\nimport domainName from \"../../domain\";\n\nfunction TwilioCreds() {\n  const [AccountSID, setAccountSID] = useState(\"\");\n  const [AuthToken, setAuthToken] = useState(\"\");\n  const [errormsg, setErrormsg] = useState(\"\");\n  const [currentSID, setCurrentSID] = useState(\"\");\n  const navigate = useNavigate();\n  const domain = domainName;\n  useEffect(() => {\n    fetch(`${domain}/updateCreds`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        } else throw new Error(\"error\");\n      })\n      .then((data) => {\n        setCurrentSID(data.sid);\n      });\n  }, []);\n\n  const updateCreds = async (sid, auth) => {\n    return fetch(`${domain}/updateCreds`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\",\n      },\n      body: JSON.stringify({\n        sid: sid,\n        auth: auth,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.error) {\n          console.log(data.error);\n          throw new Error(`error - ${data.error}`);\n        } else {\n          console.log(\"creds updated\");\n          return Promise.resolve();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return Promise.reject(err);\n      });\n  };\n\n  return (\n    <div className=\"grid\">\n      <InnerNav />\n      <div id=\"TwilioCreds\">\n        <h1>Update Your Twilio Credentials</h1>\n\n        <div className=\"tableDiv\">\n          <table id=\"demTable\">\n            <thead>\n              <tr>\n                <th>Current Twilio SID</th>\n                <th>Current Twilio Auth Token</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{currentSID}</td>\n                <td>*******************</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <form>\n          <div>\n            <label>Twilio Account SID: </label>\n            <input\n              type=\"text\"\n              value={AccountSID}\n              onChange={(e) => setAccountSID(e.target.value)}\n            />\n          </div>\n          <div>\n            <label>AuthToken: </label>\n            <input\n              type=\"password\"\n              value={AuthToken}\n              onChange={(e) => setAuthToken(e.target.value)}\n            />\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              updateCreds(AccountSID, AuthToken)\n                .then(() => navigate(\"/Console\"))\n                .catch((err) => setErrormsg(err.message));\n            }}\n          >\n            Submit\n          </button>\n        </form>\n        <p>{errormsg}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default TwilioCreds;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
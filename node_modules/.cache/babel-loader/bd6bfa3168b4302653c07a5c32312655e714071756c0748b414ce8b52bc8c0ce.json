{"ast":null,"code":"var _jsxFileName = \"/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/auth/useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { getSessionCookie, setSessionCookie, dropCookie } from \"./sessions\";\nimport domainName from \"../../domain\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst domain = domainName;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authed, setAuthed] = useState(false);\n  // Store new value to indicate the call has not finished. Default to true\n\n  // Runs once when the component first mounts\n  useEffect(() => {\n    fetch(`${domain}/@me`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\"\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        return true;\n      } else return false;\n    }).then(activeUser => {\n      if (activeUser) {\n        setAuthed(true);\n        return true;\n      } else {\n        setAuthed(false);\n        return false;\n      }\n    });\n  }, []);\n  const login = async (email, password) => {\n    return fetch(`${domain}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        throw new Error(`error - ${data.error}`);\n      } else {\n        setSessionCookie(JSON.stringify(data));\n        setAuthed(true);\n        return Promise.resolve();\n      }\n    }).catch(err => {\n      console.log(err);\n      return Promise.reject(err);\n    });\n  };\n  const logout = () => {\n    dropCookie();\n    console.log(\"The User has logged out\");\n    setAuthed(false);\n  };\n  return (\n    /*#__PURE__*/\n    // Using the provider so that ANY component in our application can\n    // use the values that we are sending.\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        authed,\n        setAuthed,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Finally creating the custom hook\n_s(AuthProvider, \"MGzeHQVOa2lVf+bxV0cEoC8ewQI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","useEffect","getSessionCookie","setSessionCookie","dropCookie","domainName","jsxDEV","_jsxDEV","AuthContext","domain","AuthProvider","children","_s","authed","setAuthed","fetch","method","headers","token","then","response","status","activeUser","login","email","password","body","JSON","stringify","json","data","error","console","log","Error","Promise","resolve","catch","err","reject","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/davediemert/Repos/phone-phlinger/frontend/src/Components/auth/useAuth.js"],"sourcesContent":["// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { getSessionCookie, setSessionCookie, dropCookie } from \"./sessions\";\nimport domainName from \"../../domain\";\n\n// Create the context\nconst AuthContext = createContext(null);\nconst domain = domainName;\nexport const AuthProvider = ({ children }) => {\n  const [authed, setAuthed] = useState(false);\n  // Store new value to indicate the call has not finished. Default to true\n\n  // Runs once when the component first mounts\n  useEffect(() => {\n    fetch(`${domain}/@me`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": getSessionCookie().token,\n        \"ngrok-skip-browser-warning\": \"skip\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return true;\n        } else return false;\n      })\n      .then((activeUser) => {\n        if (activeUser) {\n          setAuthed(true);\n          return true;\n        } else {\n          setAuthed(false);\n          return false;\n        }\n      });\n  }, []);\n\n  const login = async (email, password) => {\n    return fetch(`${domain}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.error) {\n          console.log(data.error);\n          throw new Error(`error - ${data.error}`);\n        } else {\n          setSessionCookie(JSON.stringify(data));\n          setAuthed(true);\n          return Promise.resolve();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return Promise.reject(err);\n      });\n  };\n\n  const logout = () => {\n    dropCookie();\n    console.log(\"The User has logged out\");\n    setAuthed(false);\n  };\n\n  return (\n    // Using the provider so that ANY component in our application can\n    // use the values that we are sending.\n    <AuthContext.Provider value={{ authed, setAuthed, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Finally creating the custom hook\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}